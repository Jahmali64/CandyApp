@inject NavigationManager Navigation

@code {
    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;

    protected override async Task OnInitializedAsync() {
        string loginPath = "/login";
        var authenticationState = await AuthenticationStateTask;


        if (authenticationState?.User?.Identity is null || !authenticationState.User.Identity.IsAuthenticated) {
            var returnUrl = Navigation.ToBaseRelativePath(Navigation.Uri);

            if (string.IsNullOrWhiteSpace(returnUrl))
                Navigation.NavigateTo(loginPath);
            else
                Navigation.NavigateTo($"{loginPath}?returnUrl={returnUrl}");
        }
    }
}